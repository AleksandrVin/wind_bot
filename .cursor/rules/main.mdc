---
description: 
globs: 
alwaysApply: true
---
Readme file must be updated every time and kept short [README.md](mdc:README.md)

This is a python project with TDD, DDD patters, clean architecture used as described in readme. Always update code to be aligned with project patterns. 

Docker is used with docker compose to start project [docker-compose.yml](mdc:docker-compose.yml) [Dockerfile](mdc:Dockerfile)

Packet manager: uv [pyproject.toml](mdc:pyproject.toml)
Linter: ruff (uv run ruff check\format)
project tree:

.
├── application
│   ├── __init__.py
│   ├── interfaces
│   │   └── __init__.py
│   └── use_cases
│       ├── __init__.py
│       ├── message_formatting.py
│       ├── unit_conversion.py
│       └── weather_utils.py
├── app.py
├── celery_app.py
├── config.py
├── docker-compose.yml
├── Dockerfile
├── domain
│   ├── entities
│   │   └── __init__.py
│   ├── __init__.py
│   ├── models
│   │   ├── __init__.py
│   │   ├── messaging.py
│   │   └── weather.py
│   └── services
│       └── __init__.py
├── generated-icon.png
├── infrastructure
│   ├── __init__.py
│   ├── llm
│   │   ├── __init__.py
│   │   ├── langchain_service.py
│   │   └── tools.py
│   ├── persistence
│   │   ├── database.py
│   │   ├── init_db.py
│   │   ├── __init__.py
│   └── weather
│       ├── __init__.py
│       ├── openweather_service.py
├── instance
│   └── wind_bot.db
├── interfaces
│   ├── cli
│   │   └── __init__.py
│   ├── __init__.py
│   ├── telegram
│   │   ├── bot_controller.py
│   │   ├── __init__.py
│   └── web
│       ├── app.py
│       ├── __init__.py
│       ├── models.py
│       └── schemas.py
├── main.py
├── pyproject.toml
├── pytest.ini
├── README.md
├── run_bot.py
├── start.py
├── static
│   ├── css
│   │   └── styles.css
│   └── js
│       └── script.js
├── tasks.py
├── templates
│   ├── index.html
│   ├── layout.html
│   └── stats.html
├── tests
│   ├── conftest.py
│   ├── __init__.py
│   ├── test_bot.py
│   ├── test_tasks.py
│   ├── test_utils.py
│   └── test_weather.py
└── uv.lock